****** Class Class <T>******

public final class Class<T> extends Object
                            implements Serializable,
                                       GenericDeclaration,
                                       Type,
                                       AnnotatedElement

Параметры: T - тип класса, моделируемого этим объектом класса.
Например, тип String.class — Class<String>. Используем Class<?>,
если моделируемый класс неизвестен.

Все реализованные интерфейсы: Serializable, AnnotatedElement,
                              GenericDeclaration, Type

Экземпляры класса Class представляют классы и интерфейсы в
запущенном Java-приложении. Перечисление — это своего рода
класс, а аннотация — это своего рода интерфейс. Каждый массив
также принадлежит классу, который отражается как объект Class,
который используется всеми массивами с одинаковым типом элемента
и числом измерений.

Примитивные типы Java (boolean, byte, char, short, int, long,
float и double) и ключевое слово void также представлены как
объекты класса.

Класс не имеет открытого конструктора. Вместо этого объекты Class
создаются виртуальной машиной Java автоматически по мере загрузки
классов и вызовов метода defineClass в загрузчике классов.

В следующем примере объект Class используется для печати имени
класса объекта:

************************************************************************
void printClassName(Object obj) {
         System.out.println("The class of " + obj +
                            " is " + obj.getClass().getName());
     }
************************************************************************

Также возможно получить объект класса для именованного типа (или для
пустоты), используя литерал класса. См. Раздел 15.8.2 Спецификации
языка Java™.

Например:
************************************************************************
System.out.println("The name of class Foo is: " + Foo.class.getName());
************************************************************************

****** Методы ******

<U> Class<? extends U> asSubclass(Class<U> clazz) - Приводит этот объект Class к представлению
                                                    подкласса класса, представленного указанным
                                                    объектом класса.

T cast(Object obj) - Приводит объект к классу или интерфейсу, представленному этим объектом Class.

boolean desiredAssertionStatus() - Возвращает статус утверждения, который был бы присвоен этому
                                   классу, если бы он был инициализирован во время вызова этого
                                   метода.

static Class<?> forName(String className) - Возвращает объект Class, связанный с классом или
                                            интерфейсом с заданным строковым именем.

static Class<?> forName(String name,
                        boolean initialize,
                        ClassLoader loader) - Возвращает объект Class, связанный с классом или
                                              интерфейсом с заданным строковым именем, используя
                                              заданный загрузчик классов.

AnnotatedType[] getAnnotatedInterfaces() - Возвращает массив объектов AnnotatedType, представляющих
                                           использование типов для указания суперинтерфейсов объекта,
                                           представленного этим объектом Class.

AnnotatedType getAnnotatedSuperclass() - Возвращает объект AnnotatedType, представляющий использование
                                         типа для указания суперкласса объекта, представленного этим
                                         объектом Class.

<A extends Annotation> A getAnnotation(Class<A> annotationClass) - Возвращает аннотацию этого элемента
                                                                   для указанного типа, если такая аннотация
                                                                   присутствует, иначе null.

Annotation[] getAnnotations() - Возвращает аннотации, присутствующие в этом элементе.

<A extends Annotation> A[] getAnnotationsByType(Class<A> annotationClass) - Возвращает аннотации, связанные
                                                                            с этим элементом.

String getCanonicalName() - Возвращает каноническое имя базового класса, как определено в спецификации
                            языка Java.

Class<?>[] getClasses() - Возвращает массив, содержащий объекты класса, представляющие все общедоступные
                          классы и интерфейсы, которые являются членами класса, представленного этим
                          объектом класса.

ClassLoader getClassLoader() - Возвращает загрузчик класса для класса.

Class<?> getComponentType() - Возвращает класс, представляющий тип компонента массива.

Constructor<T> getConstructor(Class<?>... parameterTypes) - Возвращает объект Constructor, который отражает
                                                            указанный открытый конструктор класса,
                                                            представленного этим объектом класса.

Constructor<?>[] getConstructors() - Возвращает массив, содержащий объекты Constructor, отражающие все
                                     общедоступные конструкторы класса, представленного этим объектом Class.

<A extends Annotation> A getDeclaredAnnotation(Class<A> annotationClass) - Возвращает аннотацию этого элемента
                                                                           для указанного типа, если такая
                                                                           аннотация присутствует напрямую,
                                                                           иначе null.

Annotation[] getDeclaredAnnotations() - Возвращает аннотации, непосредственно присутствующие в этом элементе.

<A extends Annotation> A[] getDeclaredAnnotationsByType(Class<A> annotationClass) - Возвращает аннотации этого
                                                                                    элемента для указанного типа,
                                                                                    если такие аннотации либо
                                                                                    присутствуют напрямую, либо
                                                                                    косвенно.

Class<?>[] getDeclaredClasses() - Возвращает массив объектов класса, отражающих все классы и интерфейсы,
                                  объявленные как члены класса, представленного этим объектом класса.

Constructor<T> getDeclaredConstructor(Class<?>... parameterTypes) - Возвращает объект Constructor, который
                                                                    отражает указанный конструктор класса
                                                                    или интерфейса, представленного этим
                                                                    объектом Class.

Constructor<?>[] getDeclaredConstructors() - Возвращает массив объектов Constructor, отражающих все конструкторы,
                                             объявленные классом, представленным этим объектом Class.

Field getDeclaredField(String name) - Возвращает объект Field, который отражает указанное объявленное поле
                                      класса или интерфейса, представленного этим объектом Class.

Field[] getDeclaredFields() - Возвращает массив объектов Field, отражающих все поля, объявленные классом
                              или интерфейсом, представленным этим объектом Class.

Method getDeclaredMethod(String name,
                         Class<?>... parameterTypes) - Возвращает объект Method, который отражает указанный
                                                       объявленный метод класса или интерфейса, представленного
                                                       этим объектом Class.

Method[] getDeclaredMethods() - Возвращает массив, содержащий объекты Method, отражающие все объявленные
                                методы класса или интерфейса, представленного этим объектом класса, включая
                                общедоступные, защищенные, доступ по умолчанию (пакет) и частные методы,
                                но исключая унаследованные методы.

Class<?> getDeclaringClass() - Если класс или интерфейс, представленный этим объектом класса, является
                               членом другого класса, возвращает объект класса, представляющий класс, в
                               котором он был объявлен.

Class<?> getEnclosingClass() - Возвращает непосредственно охватывающий класс базового класса.

Constructor<?> getEnclosingConstructor() - Если этот объект Class представляет локальный или анонимный класс
                                           внутри конструктора, возвращает объект Constructor, представляющий
                                           непосредственно охватывающий конструктор базового класса.

Method getEnclosingMethod() - Если этот объект Class представляет локальный или анонимный класс в методе,
                              возвращает объект Method, представляющий непосредственно включающий метод
                              базового класса.

T[] getEnumConstants() - Возвращает элементы этого класса перечисления или null, если этот объект класса
                         не представляет тип перечисления.

Field getField(String name) - Возвращает объект Field, отражающий указанное открытое
                              поле-член класса или интерфейса, представленного этим
                              объектом Class.

Field[] getFields() - Возвращает массив, содержащий объекты Field, отражающие все
                      доступные общедоступные поля класса или интерфейса,
                      представленного этим объектом Class.

Type[] getGenericInterfaces() - Возвращает типы, представляющие интерфейсы, непосредственно
                                реализованные классом или интерфейсом, представленным этим
                                объектом.

Type getGenericSuperclass() - Возвращает тип, представляющий прямой суперкласс объекта (класс,
                              интерфейс, примитивный тип или пустота), представленный этим
                              классом.

Class<?>[] getInterfaces() - Определяет интерфейсы, реализованные классом или интерфейсом,
                             представленным этим объектом.

Method getMethod(String name, Class<?>... parameterTypes) - Возвращает объект Method, отражающий
                                                            указанный открытый метод-член класса
                                                            или интерфейса, представленного этим
                                                            объектом класса.

Method[] getMethods() - Возвращает массив, содержащий объекты Method, отражающие все общедоступные
                        методы класса или интерфейса, представленного этим объектом Class, включая
                        объявленные классом или интерфейсом и унаследованные от суперклассов и
                        суперинтерфейсов.

int getModifiers() - Возвращает модификаторы языка Java для этого класса или интерфейса,
                     закодированные в виде целого числа.

String getName() - Возвращает имя объекта (класса, интерфейса, класса массива, примитивного
                   типа или пустоты), представленного этим объектом класса, в виде строки.

Package getPackage() - Получает пакет для этого класса.

ProtectionDomain getProtectionDomain() - Возвращает ProtectionDomain этого класса.

URL	getResource(String name) - Находит ресурс с заданным именем.

InputStream	getResourceAsStream(String name) - Находит ресурс с заданным именем.

Object[] getSigners() - Получает подписывающих лиц этого класса.

String getSimpleName() - Возвращает простое имя базового класса, как указано в исходном коде.

Class<? super T> getSuperclass() - Возвращает класс, представляющий суперкласс объекта
                                   (класса, интерфейса, примитивного типа или пустоты),
                                   представленного этим классом.

String getTypeName() - Возвращает информативную строку для имени этого типа.

TypeVariable<Class<T>>[] getTypeParameters() - Возвращает массив объектов TypeVariable, которые
                                               представляют переменные типа, объявленные
                                               универсальным объявлением, представленным этим
                                               объектом GenericDeclaration, в порядке объявления.

boolean	isAnnotation() - Возвращает true, если этот объект класса представляет тип аннотации.

boolean	isAnnotationPresent(Class<? extends Annotation> annotationClass) - Возвращает true,
                                               если в этом элементе присутствует аннотация для
                                               указанного типа, иначе false.

boolean	isAnonymousClass() - Возвращает true тогда и только тогда, когда базовый класс является
                             анонимным классом.

boolean	isArray() - Определяет, представляет ли этот объект класса класс массива.

boolean	isAssignableFrom(Class<?> cls) - Определяет, является ли класс или интерфейс, представленный
                                         этим объектом класса, таким же, или является суперклассом,
                                         или суперинтерфейсом класса, или интерфейса, представленного
                                         указанным параметром класса.

boolean	isEnum() - Возвращает true тогда и только тогда, когда этот класс был объявлен
                   как перечисление в исходном коде.

boolean	isInstance(Object obj) - Определяет, является ли указанный объект совместимым
                                 по назначению с объектом, представленным этим классом.

boolean	isInterface() - Определяет, представляет ли указанный объект Class тип интерфейса.

boolean	isLocalClass() - Возвращает true тогда и только тогда, когда базовый класс является
                         локальным классом.

boolean isMemberClass() - Возвращает true тогда и только тогда, когда базовый класс
                          является классом-членом.

boolean isPrimitive() - Определяет, представляет ли указанный объект Class примитивный тип.

boolean isSynthetic() - Возвращает true, если этот класс является синтетическим классом;
                        в противном случае возвращает false.

T newInstance() - Создает новый экземпляр класса, представленного этим объектом Class.

String toGenericString() - Возвращает строку, описывающую этот класс, включая информацию
                           о модификаторах и параметрах типа.

String toString() - Преобразует объект в строку.

См. более подробно документацию (ENG):
https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html
