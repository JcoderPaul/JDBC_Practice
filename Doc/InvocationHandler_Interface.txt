****** Interface InvocationHandler ******

Пакеты, библиотеки и классы: java.lang.reflect

public interface InvocationHandler

Все известные классы реализации: CompositeDataInvocationHandler,
                                 EventHandler,
                                 MBeanServerInvocationHandler,
                                 RemoteObjectInvocationHandler

InvocationHandler — это интерфейс, реализованный обработчиком
вызова экземпляра прокси. Каждый экземпляр прокси имеет связанный
с ним обработчик вызова. Когда метод вызывается в экземпляре
прокси, вызов метода кодируется и отправляется методу вызова его
обработчика вызова.

****** Метод ******

Object invoke(Object proxy,
              Method method,
              Object[] args) - Обрабатывает вызов метода на экземпляре
                               прокси и возвращает результат. Этот метод
                               будет вызываться в обработчике вызовов,
                               когда метод вызывается в экземпляре прокси,
                               с которым он связан.

Параметры:
- proxy - экземпляр прокси, на котором был вызван метод.
- method - экземпляр Method, соответствующий методу интерфейса, вызываемому
           на экземпляре прокси. Класс объявления объекта Method будет интерфейсом,
           в котором был объявлен метод, который может быть суперинтерфейсом
           прокси-интерфейса, через который прокси-класс наследует метод.
- args - массив объектов, содержащих значения аргументов, переданных при вызове
         метода на экземпляре прокси, или null, если интерфейсный метод не
         принимает аргументов. Аргументы примитивных типов упаковываются в
         экземпляры соответствующего примитивного класса-оболочки, например
         java.lang.Integer или java.lang.Boolean.

Возвращает:
Значение, возвращаемое при вызове метода на экземпляре прокси. Если объявленный
возвращаемый тип метода интерфейса является типом-примитивом, то значение,
возвращаемое этим методом, должно быть экземпляром соответствующего
класса-оболочки-примитива; в противном случае это должен быть тип, присваиваемый
объявленному возвращаемому типу.

Если значение, возвращаемое этим методом, равно null, а тип возвращаемого значения
метода интерфейса является примитивным, то при вызове метода на экземпляре прокси
будет сгенерировано исключение NullPointerException.

Если значение, возвращаемое этим методом, несовместимо с объявленным типом возвращаемого
значения метода интерфейса, как описано выше, при вызове метода на экземпляре прокси
будет сгенерировано исключение ClassCastException.

Исключения:
Throwable — исключение, которое выбрасывается при вызове метода на экземпляре прокси.
Тип исключения должен быть присваиваемым либо любому из типов исключений, объявленных
в предложении throws метода интерфейса, либо непроверяемым типам исключений
java.lang.RuntimeException или java.lang.Error.

Если этим методом создается проверенное исключение, которое не может быть назначено ни
одному из типов исключений, объявленных в предложении throws метода интерфейса, то
UndeclaredThrowableException, содержащее исключение, которое было сгенерировано этим
методом, будет вызвано вызовом метода на экземпляр прокси.